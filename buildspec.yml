version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      # - IMAGE_TAG=${COMMIT_HASH:=latest}
      - IMAGE_TAG=latest

  
  build:
    commands:
      - echo Build started on `date`

      # Build application image
      - echo Building the Application Docker image...
      - docker build -t $REPOSITORY_URI/app:latest -f $APP_DOCKERFILE_PATH .
      - docker tag $REPOSITORY_URI/app:latest $REPOSITORY_URI/app:$IMAGE_TAG
      
      # Build nginx image
      - echo Building the Nginx Docker image...
      - docker build -t $REPOSITORY_URI/nginx:latest -f $NGINX_DOCKERFILE_PATH .
      - docker tag $REPOSITORY_URI/nginx:latest $REPOSITORY_URI/nginx:$IMAGE_TAG
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI/app:$IMAGE_TAG
      - docker push $REPOSITORY_URI/nginx:$IMAGE_TAG
      - echo Writing image definitions file...
      - |
        printf '[
          {
            "name":"%s",
            "imageUri":"%s"
          },
          {
            "name":"%s",
            "imageUri":"%s"
          }
        ]' $PROJECT_NAME-app $REPOSITORY_URI/app:$IMAGE_TAG $PROJECT_NAME-nginx $REPOSITORY_URI/nginx:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
  discard-paths: yes