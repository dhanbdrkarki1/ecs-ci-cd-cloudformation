version: 0.2

phases:
  pre_build:
    commands:
      # ECR Login
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      # Docker Hub Login (not recommended for production)
      - echo Logging in to Docker Hub...
      - docker login -u dhan007 -p P@ssword0

      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      # - IMAGE_TAG=${COMMIT_HASH:=latest}
      - IMAGE_TAG=latest

  
  build:
    commands:
      - echo Build started on `date`

      # Build application image
      - echo Building the Application Docker image...
      - docker build -t $APP_REPOSITORY_URI:$IMAGE_TAG -f $APP_DOCKERFILE_PATH .
      - docker tag $APP_REPOSITORY_URI:$IMAGE_TAG $APP_REPOSITORY_URI:$IMAGE_TAG
      
      # Build nginx image
      - echo Building the Nginx Docker image...
      - docker build -t $NGINX_REPOSITORY_URI:$IMAGE_TAG -f $NGINX_DOCKERFILE_PATH .
      - docker tag $NGINX_REPOSITORY_URI:$IMAGE_TAG $NGINX_REPOSITORY_URI:$IMAGE_TAG
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Application Docker images...
      - docker push $APP_REPOSITORY_URI:$IMAGE_TAG

      - echo Pushing the Nginx Docker images...
      - docker push $NGINX_REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - |
        printf '[
          {
            "name":"%s",
            "imageUri":"%s"
          },
          {
            "name":"%s",
            "imageUri":"%s"
          }
        ]' $APP_CONTAINER_NAME $APP_REPOSITORY_URI:$IMAGE_TAG $NGINX_CONTAINER_NAME $NGINX_REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
  discard-paths: yes