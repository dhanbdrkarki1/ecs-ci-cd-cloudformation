[uwsgi]
# Server Configuration
http = :8000  ; Bind to TCP port 8000 on all interfaces

# Application Configuration
chdir = /usr/src/app/       ; Change to the application directory
module = blogsite.wsgi:application  ; WSGI application entry point

# User and group
uid = www-data
gid = www-data

; General Settings
strict = true                     ; Do not tolerate errors in configuration
master = true                     ; Use master process to manage workers
enable-threads = true             ; Allow multi-threading
vacuum = true                     ; Cleanup sockets and PID files during shutdown
single-interpreter = true         ; Use a single Python interpreter per worker
die-on-term = true                ; Graceful shutdown on SIGTERM
need-app = true                   ; Ensure app is loaded

; ; Logging
; disable-logging = true            ; Disable default logging
; log-4xx = true                    ; Log 4xx responses
; log-5xx = true                    ; Log 5xx responses

; ; Request Handling
; harakiri = 600                    ; Forcefully kill workers after 600 seconds. 

; max-requests = 1000               ; Restart workers after this many requests
; max-worker-lifetime = 3600        ; Restart workers after this many seconds
; reload-on-rss = 2048              ; Restart workers after this much resident memory
; worker-reload-mercy = 60          ; How long to wait before forcefully killing workers

; ; Worker Management
; processes = 16                    ; Maximum number of workers allowed

; ; Cheaper Algorithm Configuration
; cheaper-algo = busyness           ; Adjust workers based on workload by monitoring worker "busyness"
; cheaper = 4                       ; Minimum number of workers allowed
; cheaper-initial = 8               ; Workers created at startup
; cheaper-overload = 1              ; Length of a cycle in seconds
; cheaper-step = 4                  ; How many workers to add/remove at a time
; cheaper-busyness-multiplier = 30   ; How many cycles to wait before killing workers 
; cheaper-busyness-min = 20          ; Below this threshold, kill workers (if stable for multiplier cycles)
; cheaper-busyness-max = 70          ; Above this threshold, spawn new workers 
; cheaper-busyness-backlog-alert = 10; Spawn emergency workers if more than this many requests are waiting in the queue 
; cheaper-busyness-backlog-step = 2  ; How many emergency workers to create if there are too many requests in the queue 
