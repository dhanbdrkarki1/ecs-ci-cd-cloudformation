AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for CodeBuild and CodePipeline resources'

Parameters:
  Environment:
    Type: String
    Description: Environment name
    Default: dev

  ProjectName:
    Type: String
    Description: Name of the project

  AppDockerFilePath:
    Description: Path to the Dockerfile for the application in the code repo.
    Type: String
    Default: ./Dockerfile.app.prod

  NginxDockerFilePath:
    Description: Path to the Dockerfile for the nginx web server in the code repo.
    Type: String
    Default: ./Dockerfile.nginx.prod


  AppPort:
    Type: Number
    Description: Container port for the application

  NginxPort:
    Type: Number
    Description: Container port for the nginx server.

  GitHubRepoId:
    Type: String
    Description: GitHub repository ID

  GitHubBranch:
    Type: String
    Description: GitHub repository branch

  CodeStarConnectionArn:
    Type: String
    Description: ARN of the CodeStar connection

  EcsContainerName:
    Type: String
    Description: Name of the ECS container

  ApproverEmail:
    Type: String
    Description: Email address to receive approval notifications

  # VPC Params
  VPCBlock:
    Type: String
    Default: 10.1.0.0/20
    Description: CIDR block for the VPC

  PublicSubnet1Block:
    Type: String
    Default: 10.1.0.0/24
    Description: CIDR block for the public subnet in the first region

  PublicSubnet2Block:
    Type: String
    Default: 10.1.1.0/24
    Description: CIDR block for the public subnet in the second region

  PrivateSubnet1Block:
    Type: String
    Default: 10.1.2.0/24
    Description: CIDR block for the private subnet in first region

  PrivateSubnet2Block:
    Type: String
    Default: 10.1.3.0/24
    Description: CIDR block for the private subnet in the second region

  PrivateSubnet3Block:
    Type: String
    Default: 10.1.4.0/24
    Description: CIDR block for the third private subnet in first region

  PrivateSubnet4Block:
    Type: String
    Default: 10.1.5.0/24
    Description: CIDR block for the fourth private subnet in the second region


Resources:
  # ECR repository for application
  ApplicationECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "${ProjectName}-app"
      ImageScanningConfiguration:
        ScanOnPush: true
      EncryptionConfiguration:
        EncryptionType: AES256
      ImageTagMutability: MUTABLE
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # ECR repository for custom nginx
  NginxECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "${ProjectName}-nginx"
      ImageScanningConfiguration:
        ScanOnPush: true
      EncryptionConfiguration:
        EncryptionType: AES256
      ImageTagMutability: MUTABLE
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName


  # SNS Topic and Subscription: for approving the deployment
  ApprovalTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Pipeline Approval Topic
      TopicName: !Sub ${ProjectName}-pipeline-approval

  ApprovalSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref ApprovalTopic
      Endpoint: !Ref ApproverEmail

# CloudFormation Service Role
  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # CodeBuild Service Role
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildServiceRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:*'
                  - 'ecr:*'
                  - 's3:*'
                  - 'ecs:*'
                  - 'cloudformation:*'
                  - 'iam:*'
                Resource: '*'

  # Infrastructure Build Project
  InfraTemplateValidationProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ProjectName}-infra-build
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          - Name: ENV
            Value: !Ref Environment
      Source:
        Type: CODEPIPELINE
        BuildSpec: infra-validation-buildspec.yml

  # Application and Nginx Build Project
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: 
      - ApplicationECRRepository
      - NginxECRRepository
    Properties:
      Name: !Sub ${ProjectName}-build
      Description: Build project for container image
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: PROJECT_NAME
            Value: !Ref ProjectName
          - Name: APP_REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ProjectName}-app
          - Name: NGINX_REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ProjectName}-nginx
          - Name: APP_CONTAINER_NAME
            Value: !Sub ${ProjectName}-app
          - Name: NGINX_CONTAINER_NAME
            Value: !Sub ${ProjectName}-nginx
          - Name: APP_DOCKERFILE_PATH
            Value: !Ref AppDockerFilePath
          - Name: NGINX_DOCKER_FILE_PATH
            Value: !Ref NginxDockerFilePath
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Cache:
        Type: NO_CACHE
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub /aws/codebuild/${ProjectName}
          StreamName: build-log

# CodePipeline Service Role
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineServiceRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                  - 'cloudformation:*'
                  - 'codebuild:*'
                  - 'codestar-connections:UseConnection'
                  - 'iam:PassRole'
                Resource: '*'
              # SNS permissions for approval notifications
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref ApprovalTopic
              # Codepipeline approval action permissions
              - Effect: Allow
                Action:
                  - codepipeline:PutApprovalResult
                  - codepipeline:GetPipelineState
                  - codepipeline:ListPipelines
                  - codepipeline:GetPipeline
                  - codepipeline:GetPipelineExecution
                Resource: '*'

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ProjectName}-pipeline
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Sub ${CodeStarConnectionArn}
                FullRepositoryId: !Ref GitHubRepoId
                BranchName: !Ref GitHubBranch
                OutputArtifactFormat: 'CODE_ZIP'
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: ValidateInfraTemplate
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref InfraTemplateValidationProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: InfraTemplateValidationOutput
              RunOrder: 1


            - Name: BuildApp
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 2

        - Name: Approve
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref ApprovalTopic
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
                StackName: !Sub ${ProjectName}-infra
                TemplatePath: InfraTemplateValidationOutput::infra.yaml
                ParameterOverrides:
                  Fn::Sub: |
                    {
                      "Environment": "${Environment}",
                      "ProjectName": "${ProjectName}",
                      "AppPort": "${AppPort}",
                      "VPCBlock": "${VPCBlock}",
                      "PublicSubnet1Block": "${PublicSubnet1Block}",
                      "PublicSubnet2Block": "${PublicSubnet2Block}",
                      "PrivateSubnet1Block": "${PrivateSubnet1Block}",
                      "PrivateSubnet2Block": "${PrivateSubnet2Block}",
                      "PrivateSubnet3Block": "${PrivateSubnet3Block}",
                      "PrivateSubnet4Block": "${PrivateSubnet4Block}"
                    }
                Capabilities: CAPABILITY_NAMED_IAM
              InputArtifacts:
                - Name: InfraTemplateValidationOutput
              RunOrder: 1


  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCodePipelineAccess
            Effect: Allow
            Principal:
              AWS: 
                - !GetAtt CodePipelineServiceRole.Arn
                - !GetAtt CodeBuildServiceRole.Arn
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:ListBucket
            Resource:
              - !Sub ${ArtifactBucket.Arn}
              - !Sub ${ArtifactBucket.Arn}/*

Outputs:
  PipelineURL:
    Description: CodePipeline URL
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${ProjectName}-pipeline